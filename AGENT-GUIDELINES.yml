# Agent3D DDD Framework - LLM Decision Engine
# Simplified guidelines focused on decision-making and pass selection
# Detailed workflows are in individual pass files

metadata:
  name: "Agent3D DDD Framework Guidelines"
  purpose: "LLM decision engine for automated pass selection and execution"
  version: "2.0.0"
  last_updated: "2025-01-27"
  format: "simplified_decision_tree"

# Core Decision Logic
task_assessment:
  user_request_analysis:
    categories:
      setup_request:
        indicators: [ "new project", "setup", "initialize", "configure" ]
        decision: "foundation_pass"

      requirements_request:
        indicators: [ "requirements", "business goals", "objectives", "stakeholders" ]
        decision: "requirements_pass"

      documentation_request:
        indicators: [ "document features", "design", "architecture", "specifications" ]
        decision: "documentation_pass"

      implementation_request:
        indicators: [ "code changes", "new features", "bug fixes", "implement" ]
        decision: "development_pass"

      testing_request:
        indicators: [ "tests", "testing", "coverage", "quality assurance" ]
        decision: "testing_pass"

      cleanup_request:
        indicators: [ "refactor", "cleanup", "optimize", "improve code quality" ]
        decision: "refactoring_pass"

      review_request:
        indicators: [ "review", "PR", "code review", "quality check" ]
        decision: "code_review_pass"

      alignment_request:
        indicators: [ "sync", "align", "drift", "consistency" ]
        decision: "synchronization_pass"

      maintenance_request:
        indicators: [ "cleanup", "prune", "remove outdated", "maintenance" ]
        decision: "prune_pass"

      audit_request:
        indicators: [ "undocumented", "reverse drift", "audit", "missing docs" ]
        decision: "reverse_pass"

      comprehensive_request:
        indicators: [ "full review", "complete", "comprehensive", "all passes" ]
        decision: "full_pass"

# Pass Selection and Execution
pass_execution:
  # Reference individual pass files for detailed workflows
  pass_registry:
    requirements_pass:
      file: "~/.agent3d/passes.yml/0_requirements_pass.yml"
      triggers: [ "missing BUSINESS-OBJECTIVES.md", "missing REQUIREMENTS.md", "unclear project goals" ]

    foundation_pass:
      file: "~/.agent3d/passes.yml/1_foundation_pass.yml"
      triggers: [ "no .agent3d-config.yml", "missing core documentation", "new project setup" ]

    documentation_pass:
      file: "~/.agent3d/passes.yml/2_documentation_pass.yml"
      triggers: [ "missing feature documentation", "incomplete HIGH-LEVEL-DESIGN.md", "unclear system architecture" ]

    development_pass:
      file: "~/.agent3d/passes.yml/3_development_pass.yml"
      triggers: [ "implementation needed", "code changes required", "new features to build" ]

    testing_pass:
      file: "~/.agent3d/passes.yml/5_testing_pass.yml"
      triggers: [ "missing tests", "test failures", "coverage gaps" ]

    refactoring_pass:
      file: "~/.agent3d/passes.yml/6_refactoring_pass.yml"
      triggers: [ "code quality issues", "cleanup needed", "optimization required" ]

    code_review_pass:
      file: "~/.agent3d/passes.yml/7_code_review_pass.yml"
      triggers: [ "PR review needed", "quality validation required", "standards enforcement" ]

    synchronization_pass:
      file: "~/.agent3d/passes.yml/9_synchronization_pass.yml"
      triggers: [ "documentation-code drift", "alignment issues", "consistency problems" ]

    prune_pass:
      file: "~/.agent3d/passes.yml/8_prune_pass.yml"
      triggers: [ "outdated content", "redundant files", "cleanup needed" ]

    reverse_pass:
      file: "~/.agent3d/passes.yml/10_reverse_pass.yml"
      triggers: [ "undocumented code", "implementation without docs", "reverse drift detected" ]

    full_pass:
      file: "~/.agent3d/passes.yml/full_pass.yml"
      triggers: [ "comprehensive review needed", "major milestone", "complete alignment required" ]

  # Dual-Mode Execution Support
  execution_modes:
    full:
      description: "Complete pass execution with comprehensive workflow"
      phases: [ "scan", "draft", "ask", "sync", "confirm" ]
      use_cases: [ "new projects", "major changes", "comprehensive reviews" ]

    incremental:
      description: "Targeted updates with streamlined workflow"
      phases: [ "scan", "draft", "sync" ]
      use_cases: [ "minor updates", "specific fixes", "targeted improvements" ]

  # Mode Detection Logic
  mode_detection:
    criteria:
      project_state:
        new_project: "complete"
        existing_project: "analyze_scope"

      change_scope:
        major_changes: "complete" # >30% of content
        minor_changes: "incremental" # <30% of content

      user_intent:
        explicit_mode: "use_specified" # --mode=complete|incremental
        context_clues: "analyze_request"

    keywords:
      complete_mode: [ "complete", "comprehensive", "major", "new", "overhaul", "setup", "initialize" ]
      incremental_mode: [ "update", "fix", "add", "modify", "adjust", "improve", "minor" ]

  # Execution Protocol
  execution_steps:
  - "analyze_user_request_against_indicators"
  - "detect_appropriate_execution_mode"
  - "select_appropriate_pass_from_registry"
  - "load_pass_configuration_from_yaml_file"
  - "validate_prerequisites_and_conditions"
  - "execute_workflow_phases_for_selected_mode"
  - "validate_quality_gates_completion"
  - "determine_next_pass_if_applicable"

# Standard Workflow Pattern (used by all passes)
standard_workflow:
  phases:
    scan:
      purpose: "Detect missing/outdated content and assess current state"

    draft:
      purpose: "Create/update documentation and implementation"

    ask:
      purpose: "Clarify gaps and get human input (one question at a time)"
      protocol:
      - "ask_one_question_at_a_time"
      - "wait_for_response"
      - "no_multiple_questions"

    sync:
      purpose: "Finalize changes and ensure alignment"

    confirm:
      purpose: "Get approval before committing (if required)"
      condition: "git_workflow.require_commit_confirmation == true"

# Memory Optimization for LLM Agents
memory_patterns:
  critical_memorization:
  - "entire_.agent3d-config.yml"
  - "project_type_and_language"
  - "enabled_passes_list"
  - "git_workflow_settings"
  - "quality_thresholds"

  decision_shortcuts:
    no_config: "foundation_pass"
    missing_requirements: "requirements_pass"
    unclear_features: "documentation_pass"
    implementation_needed: "development_pass"
    tests_failing: "testing_pass"
    code_messy: "refactoring_pass"
    review_needed: "code_review_pass"
    docs_outdated: "synchronization_pass"
    cleanup_needed: "prune_pass"
    undocumented_code: "reverse_pass"
    comprehensive_needed: "full_pass"

# Error Handling
error_handling:
  common_issues:
    missing_framework:
      detection: "~/.agent3d not found"
      solution: "bootstrap_framework"

    configuration_error:
      detection: "invalid .agent3d-config.yml"
      solution: "run_foundation_pass"

    drift_too_high:
      detection: "drift > quality_gates.drift_threshold"
      solution: "run_synchronization_pass"

# Context Awareness
context_awareness:
  branch_detection:
    exec_plan_branch:
      pattern: "exec-plan/*"
      behavior: "auto_commit_steps"

    main_branch:
      pattern: "main"
      behavior: "use_memorized_git_workflow"

  project_size_adaptation:
    small_project:
      indicators: [ "< 10 files", "single developer" ]
      adaptations: [ "simplified_documentation", "combined_passes" ]

    large_project:
      indicators: [ "> 100 files", "multiple developers" ]
      adaptations: [ "detailed_documentation", "strict_quality_gates" ]

# Usage Instructions for LLM Agents
usage_instructions:
  session_initialization:
  - "load_and_memorize_decision_tree"
  - "execute_initial_assessment"
  - "establish_project_context"
  - "cache_critical_configurations"

  decision_making_process:
  - "analyze_user_request"
  - "match_against_task_categories"
  - "select_appropriate_pass"
  - "load_pass_file_for_detailed_execution"
  - "execute_workflow_phases"
  - "validate_completion_criteria"

# Integration Points
integration_points:
  drift_scanner:
    trigger_conditions: [ "after_synchronization_pass", "before_code_review_pass" ]
    modes:
      quick_scan: "--mode tc-mapping"
      comprehensive: "--mode all"

  pass_files:
    location: "~/.agent3d/passes.yml/"
    format: "yaml"
    usage: "load_for_detailed_workflow_execution"

# Success Criteria
success_criteria:
  pass_completion:
  - "all_workflow_phases_completed"
  - "quality_gates_passed"
  - "documentation_updated"
  - "drift_within_acceptable_range"

  project_health:
  - "alignment_above_90_percent"
  - "drift_below_10_percent"
  - "all_critical_documentation_present"
  - "no_broken_links_or_references"
