metadata:
  name: "Agent3D Templates System"
  type: "template"
  version: "3.0.0"
  purpose: "Standardized templates for Agent3D project configurations and documentation with consistency enforcement"
  created: "2025-01-27"
  last_updated: "2025-01-29"
  features:
  - "Comprehensive template catalog and organization"
  - "Template usage guidelines and best practices"
  - "Version tracking and migration support"
  - "Quality validation and compliance standards"
  - "Consistency enforcement across all templates"
template_categories:
  configuration:
    description: Project configuration templates
    templates:
    - name: agent3d-config.template.yml
      description: Main Agent3D project configuration template
      version: '2.0'
      target_file: .agent3d-config.yml
      usage: Foundation Pass configuration setup
      supports_placeholders: true
      migration_tool: tools/config_migrator.py
  documentation:
    description: Documentation templates
    templates:
    - name: README.template.md
      description: Project README template
      version: '1.0'
      target_file: README.md
      usage: Project documentation setup
      supports_placeholders: true
    - name: FEATURES.template.md
      description: Features documentation template
      version: '1.0'
      target_file: docs/FEATURES.md
      usage: Feature tracking and documentation
      supports_placeholders: true
  passes:
    description: DDD pass execution templates
    templates:
    - name: exec-plan.template.yml
      description: Execution plan template for Development Pass
      version: '1.0'
      target_file: docs/runs/EXEC-PLAN-{name}.yml
      usage: Development Pass execution planning
      supports_placeholders: true
usage_guidelines:
  foundation_pass:
    template: agent3d-config.template.yml
    workflow: [ "Check config exists", "Run migration if needed", "Copy/configure", "Replace placeholders", "Memorize config" ]
  development_pass:
    template: exec-plan.template.yml
    workflow: [ "Copy to docs/runs/", "Replace placeholders", "Track implementation" ]
  documentation_pass:
    templates: [ "README.template.md", "FEATURES.template.md" ]
    workflow: [ "Copy templates", "Replace placeholders", "Customize content" ]
placeholder_system:
  format: '{PLACEHOLDER_NAME}'
  categories: [ "project_info", "configuration", "development", "testing", "paths", "metadata" ]
  tools: [ "manual", "automated", "interactive" ]
validation:
  yaml: [ "Valid syntax", "Required sections", "Placeholder consistency" ]
  markdown: [ "Valid syntax", "Heading structure", "Working references" ]
migration:
  configuration_templates:
    migrator: tools/config_migrator.py
    capabilities:
    - Analyze existing configurations
    - Migrate to latest template format
    - Preserve project-specific settings
    - Handle custom configurations
    - Auto-detect project structure
  migration_workflow:
  - Analyze current configuration
  - Create backup of existing file
  - Execute migration with template defaults
  - Preserve custom settings in appropriate sections
  - Validate migrated configuration
  - Update agent memory
maintenance:
  version_control:
  - Track template versions in metadata
  - Maintain backward compatibility
  - Document breaking changes
  - Provide migration paths
  quality_assurance:
  - Validate template syntax
  - Test placeholder replacement
  - Verify migration compatibility
  - Check documentation accuracy
  update_process:
  - Update template content
  - Increment version numbers
  - Update migration tools
  - Test with existing projects
  - Document changes
integration:
  foundation_pass:
    templates:
    - agent3d-config.template.yml
    workflow: Configuration setup and migration
  development_pass:
    templates:
    - exec-plan.template.yml
    workflow: Execution planning and tracking
  documentation_pass:
    templates:
    - README.template.md
    - FEATURES.template.md
    workflow: Documentation structure setup
  drift_scanner:
    dependency: agent3d-config.template.yml
    usage: Configuration validation and analysis
agent_instructions:
  template_usage:
  - Always use templates for new project setup
  - Check template versions before using
  - Replace ALL placeholders with appropriate values
  - Validate template output after replacement
  - Use migration tools for existing configurations
  - ALWAYS update template versions when modifying template files
  template_selection:
  - Use agent3d-config.template.yml for all projects
  - Customize based on project type and requirements
  - Preserve existing project-specific settings
  - Move non-standard configurations to custom_settings
  quality_checks:
  - Validate YAML syntax after template processing
  - Ensure all required sections are present
  - Verify placeholder replacement completeness
  - Test configuration with drift scanner
  - MEMORIZE configuration after setup
template_locations:
  primary: templates/
  legacy: N/A
  backup: .agent3d/templates/
naming_conventions:
  templates: '{name}.template.{extension}'
  generated: '{name}.{extension}'
  backups: '{name}.{extension}.backup.{timestamp}'
support:
  migration_guide: docs/AGENT3D-CONFIG-TEMPLATE-GUIDE.md
  migration_workflow: docs/migrations/config-template-migration.yml
  troubleshooting: Check migration guide for common issues
roadmap:
  planned_features:
  - Interactive template configuration wizard
  - Template validation automation
  - Custom template creation tools
  - Template versioning and rollback
  - Multi-project template synchronization
