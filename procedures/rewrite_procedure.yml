metadata:
    name: "Rewrite {Feature/Test} Procedure"
    version: "1.0.0"
    purpose: "Systematic loop workflow for large-scale refactoring using DDD methodologies"
    approach: "Pure LLM-based rewriting without programming language execution"
    scope: "Documentation files, test files, configuration files"
    created: "2025-01-29"

description: |
    A comprehensive procedure for systematically rewriting files using DDD methodologies and templates.
    This procedure implements a backup-and-rewrite loop workflow that processes directories of files
    one at a time, ensuring quality improvements while maintaining safety through backups.

core_principles:
  - "ONE FILE AT A TIME: Process only one file per iteration"
  - "BACKUP BEFORE REWRITE: Always create backup before any changes"
  - "VERIFY BEFORE CLEANUP: Compare content integrity before deleting backup"
  - "PURE LLM APPROACH: No programming language execution, only text analysis"
  - "AUTOMATED VERIFICATION: No human confirmation required"
  - "CONTENT PRESERVATION: Zero tolerance for information loss"

workflow_pattern: "EXEC-PLAN → LOOP(BACKUP → REWRITE → VERIFY → CLEANUP)"

execution_strategy:
    approach: "execution_plan_driven"
    speed_optimization: "pre_computed_file_list_and_templates"
    description: "Create execution plan once, then execute fast loop per file"

    optimized_workflow:
        phase_1: "CREATE-EXEC-PLAN (scan all files, cache templates, generate roadmap)"
        phase_2: "FAST-LOOP per file: BACKUP → REWRITE → VERIFY → CLEANUP"
        benefits: "Eliminates redundant scanning, template loading, and planning per file"

# Target Scope Configuration
target_scopes:
    documentation_features:
        pattern: "docs/features/*.md"
        description: "Feature documentation files requiring DDD template compliance"
        backup_suffix: ".backup"
        validation_criteria: [ "template_compliance", "content_completeness", "link_validity" ]

    test_files:
        pattern: "tests/**/test_*.py"
        description: "Test files requiring modernization and DDD compliance"
        backup_suffix: ".backup"
        validation_criteria: [ "test_structure", "tc_id_compliance", "framework_classification" ]

    configuration_files:
        pattern: "**/*.yml"
        description: "Configuration files requiring standardization"
        backup_suffix: ".backup"
        validation_criteria: [ "schema_compliance", "structure_consistency", "documentation_quality" ]

    pass_documentation:
        pattern: "passes.yml/*.yml"
        description: "Pass documentation requiring template compliance"
        backup_suffix: ".backup"
        validation_criteria: [ "pass_template_compliance", "workflow_clarity", "quality_gates" ]

# Execution Plan Workflow
execution_phases:
    create_exec_plan:
        purpose: "Create comprehensive execution plan for all target files"
        description: "One-time setup: scan directory, identify files, determine templates, create execution roadmap"

        exec_plan_template: |
            # REWRITE EXECUTION PLAN - {timestamp}

            **Target Pattern**: {target_pattern}
            **Total Files**: {file_count}
            **Estimated Duration**: {estimated_time}

            ## Execution Queue

            ### 1. {file_path_1}
            - **Template**: {template_name}
            - **Backup**: {file_path_1}.backup.{timestamp}
            - **Priority**: {priority_level}

            ### 2. {file_path_2}
            - **Template**: {template_name}
            - **Backup**: {file_path_2}.backup.{timestamp}
            - **Priority**: {priority_level}

            [Continue for all files...]

            ## Templates Cache
            - **Feature Template**: [cached_content]
            - **Test Template**: [cached_content]
            - **Config Template**: [cached_content]

        speed_optimizations:
          - "scan_once_execute_many"
          - "pre_cache_all_templates"
          - "pre_calculate_all_backup_paths"
          - "batch_file_validation"

    # Fast Loop Phases (per file from exec plan)
    backup:
        action: "mv {file_path} {file_path}.backup.{timestamp}"
        verify: "backup_file_exists_and_readable"
        safety: "never_overwrite_existing_backups"

    rewrite:
        action: "apply_cached_template_to_original_content"
        approach: "pure_llm_analysis_and_generation"
        preserve: "all_factual_information_technical_details_references"
        improve: "structure_clarity_template_compliance"

    validate:
        check: "template_compliance_syntax_correctness_required_sections"
        pass_criteria: "all_validation_checks_successful"

    compare:
        action: "verify_all_original_content_preserved_in_rewritten_file"
        approach: "pure_llm_semantic_comparison"
        critical: "zero_tolerance_for_information_loss"

    cleanup:
        action: "rm {file_path}.backup.{timestamp}"
        prerequisite: "content_integrity_verification_passed"
        safety: "double_check_before_deletion"

# Loop Control
loop_control:
    continuation_criteria:
      - "more_files_in_candidate_list"
      - "quality_threshold_not_yet_achieved"
      - "no_critical_errors_encountered"

    termination_criteria:
      - "all_files_processed_successfully"
      - "quality_threshold_achieved"
      - "critical_error_encountered"
      - "maximum_iteration_limit_reached"

    progress_tracking:
      - "files_processed_count"
      - "files_remaining_count"
      - "overall_quality_improvement"
      - "time_per_file_average"

# Safety and Recovery
safety_measures:
    backup_management:
      - "never_overwrite_existing_backups"
      - "maintain_backup_registry"
      - "verify_backup_integrity"
      - "provide_easy_restoration_process"

    error_handling:
      - "graceful_failure_recovery"
      - "automatic_backup_restoration"
      - "detailed_error_logging"
      - "user_notification_of_issues"

    quality_assurance:
      - "mandatory_content_integrity_verification"
      - "automated_content_preservation_checking"
      - "quality_threshold_enforcement"
      - "template_compliance_validation"
      - "no_backup_deletion_without_verification"

# Expected Outcomes
expected_outcomes:
    immediate:
      - "systematically_improved_file_quality"
      - "ddd_template_compliance_achieved"
      - "enhanced_content_clarity_and_structure"
      - "maintained_content_accuracy_and_integrity"

    long_term:
      - "consistent_documentation_standards"
      - "improved_maintainability"
      - "enhanced_user_experience"
      - "reduced_technical_debt"

# Quality Gates
quality_gates:
    per_file:
      - name: "template_compliance"
        threshold: "100%"
        critical: true
      - name: "content_completeness"
        threshold: "95%"
        critical: true
      - name: "quality_improvement"
        threshold: "20%"
        critical: false

    overall_procedure:
      - name: "files_processed_successfully"
        threshold: "90%"
        critical: true
      - name: "average_quality_improvement"
        threshold: "25%"
        critical: false
      - name: "zero_data_loss"
        threshold: "100%"
        critical: true
